Chapter 82: Form Validation - Text Fields

Form Validation helps ensure that users are filling out forms correctly before submission.
If a required field is missing or incorrect , Javascript can prompt the user to correct it.
Here's how to validate a simple text field where users must enter their last name.

1. Basic HTMl form structure:

   start with a simple form that asks the user to input their last name:

   <form onsubmit = "return checkForLastName();">

      please enter your last name: <br>
      <input type = "text" id = "lastNameField">
      <input type = "submit" value = "submit Form">
   </form>   

   a. The form triggers the checkForLastName() function when the "submit" button is clicked.
   b. The onsubmit =  "return checkForLastName();" is essential because it presents form  
   submission if Validation fails.

 2. Javascript function for Validation:  

     The checkForLastName() function checks if the user has entered anything in the 
     "lastNameField". If not, it displays an alert and prevents submission.

     function checkForLastName() {
          if (document.getElementById("lastNameField").value.length === 0) {
               alert("please enter your last name");
               return false;// Stops form submission
          }
     }

     Line 2: checks if the length of the field value is 0 (empty).
     Line 3: Shows an alert if the field is empty.
     Line 4: Returning false stops the form submission.

3. Improving Usability with focus();

    To enhance user experience , you can automatically place the cursor back in the empty 
    field using the focus() method:

    function checkForLastName(){
        var targetField = document.getElementById("lastNameField");
        if (targetField.value.trim().length === 0) {
             alert("please enter your last name");
             targetField.focus();// places cursor in the field
             return false;
        }
    }

      Line 2: Stores the input field in a variable (targetField).
      Line 6: The focus() method automatically places the cursor in the empty field, helping 
      the user correct their mistake.


4. adding visual feedback:
   
    To further guide the user , you can chamge the background color of the empty field to 
    yellow, then restore it to white once the user fils it out.

   function checkForLastName() {
      var targetField = document.getElementById("lastNameField");
      if (targetField.value.trim().length === 0) {
          alert("please enter your last name");
          targetField.style.background = "yellow"; // highlight empty field
          targetField.focus();
          return false;
      }
      targetField.style.background = "white";// Restore background after valid input
   }

   Line 6 : change the background color of the empty field to yellow , making it visually
   clear where the user should focus.
   Line 9 : Restores the background to white after valid input.

Key Takeaways:   

    Form Validation : Use Javascript to check if required fields are filled.
    Prevention of submission: Returning false prevents the form from submitting if 
    validation fails.
    Improving Usability: use focus() and visual feedback like changing background color to
    make the form user friendly.

Form validation ensures a smooth experience , making sure users fill out forms correctly    
before submitting them.